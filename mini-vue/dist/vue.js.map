{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/vdom/index.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = \"[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*\";\nconst qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nconst startTagOpen = new RegExp((\"^<\" + qnameCapture));\nconst startTagClose = /^\\s*(\\/?)>/;\nconst endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n\nexport function parseHTML(html) {\n    const ELEMENT_TYPE = 1;\n    const TEXT_TYPE = 3;\n    const stack = [];  //用于存放元素\n    let currentParent; //指向的是栈中的最后一个\n    let root;\n\n    //截取字符串\n    function advance(n) {\n        html = html.substring(n);\n    }\n\n    //最终转换成抽象语法树\n    function createAstElement(tag, attrs) {\n        return {\n            tag,\n            type: ELEMENT_TYPE,\n            children: [],\n            attrs,\n            parent: null\n        }\n    }\n\n    function start(tag, attrs) {\n        let node = createAstElement(tag, attrs);//创造一个ast节点\n        if (!root) { //看一下是否为空树\n            root = node; //如果为空则当前是树的根节点\n        }\n        if (currentParent) {\n            node.parent = currentParent;\n            currentParent.children.push(node);\n        }\n        stack.push(node);\n        currentParent = node; //currentParent为栈中最后一个\n    }\n\n    function chars(text) {\n        text = text.replace(/\\s/g, '');\n        text && currentParent.children.push({ //将文本存放在当前指向的节点\n            type: TEXT_TYPE,\n            text,\n            parent: currentParent\n        });\n    }\n\n    function end(tag) {\n        stack.pop();  //弹出最后一个\n        currentParent = stack[stack.length - 1];\n    }\n\n    function parseStartTag() {\n        const start = html.match(startTagOpen);\n        if (start) {\n            const match = {\n                tagName: start[1],\n                attrs: []\n            }\n            advance(start[0].length);\n            //如果不是开始标签的结束，就一直匹配下去\n            let attr, end;\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                advance(attr[0].length);\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] || true });\n            }\n\n            if (end) {\n                advance(end[0].length);\n            }\n\n            return match;\n        }\n\n        return false;\n\n    }\n    while (html) {\n        let textEnd = html.indexOf('<'); //为0说明是开始标签或者结束标签\n        if (textEnd == 0) {\n            let startTagMatch = parseStartTag();\n            if (startTagMatch) {\n                start(startTagMatch.tagName, startTagMatch.attrs);\n                continue;\n            }\n            let endTagMatch = html.match(endTag);\n            if (endTagMatch) {\n                advance(endTagMatch[0].length);\n                end(endTagMatch[1]);\n                continue;\n            }\n            break;\n        }\n        if (textEnd > 0) {\n            let text = html.substring(0, textEnd);\n            if (text) {\n                chars(text);\n                advance(text.length);\n            }\n        }\n    }\n    console.log(root);\n    return root;\n}","import { parseHTML } from \"./parse\";\n\nfunction genProps(attrs) {\n    let str = ''; //{name,value}\n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i];\n        if (attr.name == \"style\") {\n            let obj = {};\n            //color:red => {color:'red'}\n            attr.value.split(';').forEach(item => {\n                let [key, value] = item.split(':');\n                obj[key] = value;\n            });\n            attr.value = obj;\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`;\n    }\n    return `{${str.slice(0, -1)}}`;\n}\n\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\n\nfunction gen(node) {\n    if (node.type === 1) { //如果节点为元素\n        return codegen(node);\n    } else {\n        //文本\n        let text = node.text;\n        if (!defaultTagRE.test(text)) {\n            return `_v(${JSON.stringify(text)})`;\n        } else {\n            let tokens = [];\n            let match;\n            defaultTagRE.lastIndex = 0;\n            let lastIndex = 0;\n            while (match = defaultTagRE.exec(text)) {\n                let index = match.index;\n                if (index > lastIndex) {\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n                }\n                tokens.push(`_s(${match[1].trim()})`);\n                lastIndex = index + match[0].length;\n            }\n            if (lastIndex < text.length) {\n                tokens.push(JSON.stringify(text.slice(lastIndex)));\n            }\n            return `_v(${tokens.join('+')})`;\n        }\n    }\n}\n\nfunction genChildren(el) {\n    let children = el.children;\n    if (children) {\n        return children.map(child => gen(child)).join(',');\n    }\n}\n\nfunction codegen(ast) {\n    let children = genChildren(ast);\n    let code = `_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'}${ast.children.length > 0 ? `,${children}` : ''})`;\n    return code;\n}\n\nexport function compileToFunction(template) {\n    //将模板转换成ast语法树\n    let ast = parseHTML(template);\n\n    //生成render方法{render方法返回的结果就是虚拟dom}\n    //模板引擎的实现原理就是with + new Function\n    let code = codegen(ast);\n    code = `with(this){return ${code}}`;\n    let render = new Function(code);\n    return render;\n}","let oldArrayProto = Array.prototype;\n\nexport let newArrayProto = Object.create(oldArrayProto);\n\nlet methods = [\n    \"pop\",\n    \"push\",\n    \"shift\",\n    \"unshift\",\n    \"sort\",\n    \"reverse\",\n    \"splice\"\n]; //concat、slice不会改变原数组\n\nmethods.forEach(method => {\n    newArrayProto[method] = function (...args) { //函数劫持\n        const result = oldArrayProto[method].call(this, ...args);\n        //对新增的数组再次进行劫持\n        let inserted;\n        let ob = this.__ob__;\n        switch (method) {\n            case \"push\":\n            case \"unshift\":\n                inserted = args;\n                break;\n            case \"splice\":\n                inserted = args.slice(2);\n                break;\n        }\n        if(inserted){\n            //对新增的内容再次进行观测\n            ob.observeArray(inserted);\n        }\n        return result;\n    }\n});","import { newArrayProto } from \"./array\";\nclass Observer {\n    constructor(data) {\n        //如果data有__ob__属性，则说明数据被检测过\n        Object.defineProperty(data, \"__ob__\", {\n            value: this,\n            enumerable: false\n        });\n        //Object.defineProperty只能劫持已经存在的属性\n        if (Array.isArray(data)) {\n            //重写数组的push等方法\n            data.__proto__ = newArrayProto;\n            //如果数组中是对象则可以去监听\n            this.observeArray(data);\n        } else {\n            this.walk(data);\n        }\n    }\n    /**\n     * 循环对象，对属性依次劫持\n     * @param {*} data \n     */\n    walk(data) {\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]));\n    }\n\n    observeArray(data) {\n        data.forEach(item => observe(item));\n    }\n}\n\nexport function defineReactive(target, key, value) {\n    observe(value);\n    Object.defineProperty(target, key, {\n        get() {\n            return value;\n        },\n        set(newValue = value) {\n            if (newValue == value) return;\n            observe(newValue);\n            value = newValue;\n        }\n    });\n}\n\nexport function observe(data) {\n    if (typeof data != \"object\" || data == null) {\n        return;\n    }\n    if (data.__ob__ instanceof Observer) {\n        return data.__ob__;\n    }\n\n    return new Observer(data);\n}","import { observe } from \"./observe/index\";\nexport function initState(vm) {\n    const opts = vm.$options;\n    if (opts.data) {\n        initData(vm);\n    }\n}\n\nfunction proxy(vm, target, key) {\n    Object.defineProperty(vm, key, {\n        get() {\n            return vm[target][key];\n        },\n        set(newValue) {\n            vm[target][key] = newValue;\n        }\n    });\n}\n\nfunction initData(vm) {\n    let data = vm.$options.data;\n    data = typeof data == \"function\" ? data.call(this) : data;\n    vm._data = data;\n    observe(data);\n\n    for (let key in data) {\n        proxy(vm, \"_data\", key);\n    }\n}","\n//_c\nexport function createElementVNode(vm, tag, props = {}, ...children) {\n\n}\n\n//_v\nexport function createTextVNode() {\n\n}","import { createElementVNode, createTextVNode } from './vdom/index';\nexport function initLifeCycle(Vue) {\n    Vue.prototype._update = function () {\n\n    }\n    Vue.prototype._v = function () {\n        return createTextVNode(this, ...arguments);\n    }\n    Vue.prototype._c = function () {\n        return createElementVNode(this, ...arguments);\n    }\n    Vue.prototype._s = function (value) {\n        return JSON.stringify(value);\n    }\n    Vue.prototype._render = function () {\n        const vm = this;\n        return vm.$options.render.call(vm);\n    }\n}\nexport function mountComponent(vm, el) {\n    //1、调用render方法产生虚拟节点，虚拟dom\n    vm._update(vm._render());\n    //2、根据虚拟dom生成真实dom\n\n    //3、插入el元素\n\n}","import { compileToFunction } from './compiler/index';\nimport { initState } from \"./state\";\nimport { mountComponent } from './lifecycle';\n/**\n * 给Vue添加init方法\n * @param {*} Vue \n */\n\nexport function initMixin(Vue) {\n    /**\n     * 用于初始化操作\n     */\n    Vue.prototype._init = function (options) {\n        const vm = this;\n        vm.$options = options; //将用户的选项挂载到实例上\n\n        //初始化状态\n        initState(vm);\n\n        if (options.el) {\n            vm.$mount(options.el);\n        }\n    }\n\n    Vue.prototype.$mount = function (el) {\n        const vm = this;\n        el = document.querySelector(el);\n        let ops = vm.$options;\n        if (!ops.render) {\n            let template;\n            if (!ops.template && el) {\n                template = el.outerHTML;\n            } else {\n                if (el) {\n                    template = ops.template;\n                }\n            }\n\n            //如果写了template，就用template\n            if (template) {\n                //对模板进行编译\n                const render = compileToFunction(template);\n                ops.render = render;\n            }\n        }\n        mountComponent(vm, el);//组件的挂载\n    }\n}\n\n\n","import { initMixin } from \"./init\";\nimport { initLifeCycle } from \"./lifecycle\";\n\n/**\n * 用户的选项\n * @param {*} options \n */\nfunction Vue(options) {\n    this._init(options);\n}\n\n//扩展init方法\ninitMixin(Vue);\ninitLifeCycle(Vue);\n\nexport default Vue;"],"names":["ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","attribute","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","advance","n","substring","createAstElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","console","log","genProps","str","i","obj","split","forEach","item","key","JSON","stringify","slice","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","el","map","child","ast","code","compileToFunction","template","render","Function","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","method","args","result","call","inserted","ob","__ob__","observeArray","Observer","data","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","observe","target","get","set","newValue","initState","vm","opts","$options","initData","proxy","_data","createElementVNode","createTextVNode","initLifeCycle","Vue","_update","_v","arguments","_c","_s","_render","mountComponent","initMixin","_init","options","$mount","document","querySelector","ops","outerHTML"],"mappings":"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"}