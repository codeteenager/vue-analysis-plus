{"version":3,"file":"vue.js","sources":["../src/compiler/index.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = \"[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*\";\nconst qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nconst startTagOpen = new RegExp((\"^<\" + qnameCapture));\nconst startTagClose = /^\\s*(\\/?)>/;\nconst endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\n\nfunction parseHTML(html) {\n    const ELEMENT_TYPE = 1;\n    const TEXT_TYPE = 3;\n    const stack = [];  //用于存放元素\n    let currentParent; //指向的是栈中的最后一个\n    let root;\n\n    //截取字符串\n    function advance(n) {\n        html = html.substring(n);\n    }\n\n    //最终转换成抽象语法树\n    function createAstElement(tag, attrs) {\n        return {\n            tag,\n            type: ELEMENT_TYPE,\n            children: [],\n            attrs,\n            parent: null\n        }\n    }\n\n    function start(tag, attrs) {\n        let node = createAstElement(tag, attrs);//创造一个ast节点\n        if (!root) { //看一下是否为空树\n            root = node; //如果为空则当前是树的根节点\n        }\n        if (currentParent) {\n            node.parent = currentParent;\n            currentParent.children.push(node);\n        }\n        stack.push(node);\n        currentParent = node; //currentParent为栈中最后一个\n    }\n\n    function chars(text) {\n        text = text.replace(/\\s/g, '');\n        text && currentParent.children.push({ //将文本存放在当前指向的节点\n            type: TEXT_TYPE,\n            text,\n            parent: currentParent\n        });\n    }\n\n    function end(tag) {\n        stack.pop();  //弹出最后一个\n        currentParent = stack[stack.length - 1];\n    }\n\n    function parseStartTag() {\n        const start = html.match(startTagOpen);\n        if (start) {\n            const match = {\n                tagName: start[1],\n                attrs: []\n            }\n            advance(start[0].length);\n            //如果不是开始标签的结束，就一直匹配下去\n            let attr, end;\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                advance(attr[0].length);\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] || true });\n            }\n\n            if (end) {\n                advance(end[0].length);\n            }\n\n            return match;\n        }\n\n        return false;\n\n    }\n    while (html) {\n        let textEnd = html.indexOf('<'); //为0说明是开始标签或者结束标签\n        if (textEnd == 0) {\n            let startTagMatch = parseStartTag();\n            if (startTagMatch) {\n                start(startTagMatch.tagName, startTagMatch.attrs);\n                continue;\n            }\n            let endTagMatch = html.match(endTag);\n            if (endTagMatch) {\n                advance(endTagMatch[0].length);\n                end(endTagMatch[1]);\n                continue;\n            }\n            break;\n        }\n        if (textEnd > 0) {\n            let text = html.substring(0, textEnd);\n            if (text) {\n                chars(text);\n                advance(text.length);\n            }\n        }\n    }\n    console.log(root);\n    return root;\n}\n\nexport function compileToFunction(template) {\n    let ast = parseHTML(template);\n}","let oldArrayProto = Array.prototype;\n\nexport let newArrayProto = Object.create(oldArrayProto);\n\nlet methods = [\n    \"pop\",\n    \"push\",\n    \"shift\",\n    \"unshift\",\n    \"sort\",\n    \"reverse\",\n    \"splice\"\n]; //concat、slice不会改变原数组\n\nmethods.forEach(method => {\n    newArrayProto[method] = function (...args) { //函数劫持\n        const result = oldArrayProto[method].call(this, ...args);\n        //对新增的数组再次进行劫持\n        let inserted;\n        let ob = this.__ob__;\n        switch (method) {\n            case \"push\":\n            case \"unshift\":\n                inserted = args;\n                break;\n            case \"splice\":\n                inserted = args.slice(2);\n                break;\n        }\n        if(inserted){\n            //对新增的内容再次进行观测\n            ob.observeArray(inserted);\n        }\n        return result;\n    }\n});","import { newArrayProto } from \"./array\";\nclass Observer {\n    constructor(data) {\n        //如果data有__ob__属性，则说明数据被检测过\n        Object.defineProperty(data, \"__ob__\", {\n            value: this,\n            enumerable: false\n        });\n        //Object.defineProperty只能劫持已经存在的属性\n        if (Array.isArray(data)) {\n            //重写数组的push等方法\n            data.__proto__ = newArrayProto;\n            //如果数组中是对象则可以去监听\n            this.observeArray(data);\n        } else {\n            this.walk(data);\n        }\n    }\n    /**\n     * 循环对象，对属性依次劫持\n     * @param {*} data \n     */\n    walk(data) {\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]));\n    }\n\n    observeArray(data) {\n        data.forEach(item => observe(item));\n    }\n}\n\nexport function defineReactive(target, key, value) {\n    observe(value);\n    Object.defineProperty(target, key, {\n        get() {\n            return value;\n        },\n        set(newValue = value) {\n            if (newValue == value) return;\n            observe(newValue);\n            value = newValue;\n        }\n    });\n}\n\nexport function observe(data) {\n    if (typeof data != \"object\" || data == null) {\n        return;\n    }\n    if (data.__ob__ instanceof Observer) {\n        return data.__ob__;\n    }\n\n    return new Observer(data);\n}","import { observe } from \"./observe/index\";\nexport function initState(vm) {\n    const opts = vm.$options;\n    if (opts.data) {\n        initData(vm);\n    }\n}\n\nfunction proxy(vm, target, key) {\n    Object.defineProperty(vm, key, {\n        get() {\n            return vm[target][key];\n        },\n        set(newValue) {\n            vm[target][key] = newValue;\n        }\n    });\n}\n\nfunction initData(vm) {\n    let data = vm.$options.data;\n    data = typeof data == \"function\" ? data.call(this) : data;\n    vm._data = data;\n    observe(data);\n\n    for (let key in data) {\n        proxy(vm, \"_data\", key);\n    }\n}","import { compileToFunction } from './compiler/index';\nimport { initState } from \"./state\";\n/**\n * 给Vue添加init方法\n * @param {*} Vue \n */\n\nexport function initMixin(Vue) {\n    /**\n     * 用于初始化操作\n     */\n    Vue.prototype._init = function (options) {\n        const vm = this;\n        vm.$options = options; //将用户的选项挂载到实例上\n\n        //初始化状态\n        initState(vm);\n\n        if (options.el) {\n            vm.$mount(options.el);\n        }\n    }\n\n    Vue.prototype.$mount = function (el) {\n        const vm = this;\n        el = document.querySelector(el);\n        let ops = vm.$options;\n        if (!ops.render) {\n            let template;\n            if (!ops.template && el) {\n                template = el.outerHTML;\n            } else {\n                if (el) {\n                    template = ops.template;\n                }\n            }\n\n            //如果写了template，就用template\n            if (template) {\n                //对模板进行编译\n                const render = compileToFunction(template);\n                ops.render = render;\n            }\n        }\n    }\n\n\n}\n\n\n","import { initMixin } from \"./init\";\n/**\n * 用户的选项\n * @param {*} options \n */\nfunction Vue(options) {\n    this._init(options);\n}\n\n//扩展init方法\ninitMixin(Vue);\n\nexport default Vue;"],"names":["ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","attribute","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","advance","n","substring","createAstElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","console","log","compileToFunction","template","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","args","result","call","inserted","ob","__ob__","slice","observeArray","Observer","data","defineProperty","enumerable","isArray","__proto__","walk","keys","key","defineReactive","item","observe","target","get","set","newValue","initState","vm","opts","$options","initData","proxy","_data","initMixin","Vue","_init","options","el","$mount","document","querySelector","ops","render","outerHTML"],"mappings":"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"}